{
  "name": "mcp-server-examples",
  "description": "An MCP server example that demonstrates how to use the Model Context Protocol (MCP) SDK to create a server that can handle requests and responses in a structured way.",
  "author": "Suresh Konakanchi",
  "version": "1.0.0",
  "private": true,
  "main": "src/index.js",
  "license": "MIT",
  "type": "module",
  "scripts": {
    "dev": "tsx src/index.ts",
    "build": "tsc --noEmit false --pretty",
    "debug": "npm run build && npx @modelcontextprotocol/inspector node dist/index.js",
    "start": "node dist/index.js",
    "test": "jest"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.11.0",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "fs-extra": "^11.3.0",
    "ignore": "^7.0.4",
    "node-fetch": "^3.3.2",
    "path": "^0.12.7",
    "zod": "^3.24.4"
  },
  "devDependencies": {
    "@types/express": "^5.0.1",
    "@types/jest": "^29.5.14",
    "tsx": "^4.7.0",
    "typescript": "^5.3.3",
    "jest": "^29.7.0",
    "ts-jest": "^29.3.2"
  }
}